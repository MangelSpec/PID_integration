{
  "config": {
    "step": {
      "user": {
        "title": "Add departure board",
        "description": "Provide configuration data. See documentation for further info.",
        "data": {
          "stop_selector": "Select the stop",
          "api_key": "Enter API key",
          "departures_number": "Number of departures to display",
          "cal_events_number": "Number of calendar events for departures to be created"
        },
        "data_description": {
          "stop_selector": "Hint - type to search",
          "api_key": "API key for Golemio API"
        }
      }
    },
    "error": {
      "cannot_connect": "Unknown API connection error",
      "stop_not_in_list": "Stop was not found in list - choose only stop in provided list.",
      "stop_not_found": "Stop with provided awsIDs was not found.",
      "no_departures_selected": "Number of departures cannot be 0.",
      "wrong_api_key": "Connection was not authorized. Wrong or no API key provided."
    }
  },
  "entity": {
    "binary_sensor": {
      "infotext": {
        "name": "Infotext"
      },
      "wheelchair_accessible": {
        "name": "Wheelchair accessible",
        "state": {
          "on": "Yes",
          "off": "No"
        }
      }
    },
    "calendar": {
      "departures": {
        "name": "Vehicle at {stop_name} stop",
        "state_attributes": {
          "route_type": {
            "name": "Route type",
            "state": {
              "0": "Tram",
              "1": "Metro",
              "2": "Train",
              "3": "Bus",
              "4": "Ferry",
              "7": "Funicular",
              "11": "Trolleybus"
            }
          }
        }
      }
    },
    "sensor": {
      "departure": {
        "name": "Departure {num}"
      },
      "latitude": {
        "name": "Stop location (latitude)"
      },
      "longitude": {
        "name": "Stop location (longitude)"
      },
      "platform": {
        "name": "Platform"
      },
      "stop_name": {
        "name": "Stop name"
      },
      "updated": {
        "name": "Updated"
      },
      "zone": {
        "name": "Zone"
      }
    }
  }
}
